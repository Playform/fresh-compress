import h from"fast-glob";import p from"fs";import*as w from"csso";import*as u from"html-minifier-terser";import{minify as j}from"terser";import g from"sharp";import v from"svgo";const y=async(t,e=2)=>{if(t===0)return"0 Bytes";const a=1024,s=e<0?0:e,i=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],o=Math.floor(Math.log(t)/Math.log(a));return`${parseFloat((t/a**o).toFixed(s))} ${i[o]}`},B=async(t,e={})=>{const a=t.options.input.file.split(".").pop();if(!a)return;const s={avci:"avif",avcs:"avif",avifs:"avif",heic:"heif",heics:"heif",heifs:"heif",jfif:"jpeg",jif:"jpeg",jpe:"jpeg",jpg:"jpeg"},i=typeof s[a]<"u"?s[a]:typeof e[a]<"u"?a:!1;if(["avif","gif","heif","jpeg","png","raw","tiff","webp"].includes(i)&&e[i]!==!1)return await t[i](e[i]).toBuffer()},T=async(t,e=2)=>{for(const a in t)if(Object.prototype.hasOwnProperty.call(t,a)){const s=t[a];if(!s)continue;switch(a){case"css":await c(`${t.path}**/*.css`,e,a,i=>w.minify(i,s).css);break;case"html":await c(`${t.path}**/*.html`,e,a,async i=>await u.minify(i,s));break;case"js":await c(`${t.path}**/*.{js,mjs,cjs}`,e,a,async i=>(await j(i,s)).code);break;case"img":await c(`${t.path}**/*.{avci,avcs,avif,avifs,gif,heic,heics,heif,heifs,jfif,jif,jpe,jpeg,jpg,png,raw,tiff,webp}`,e,a,async i=>await B(i,s),async i=>await g(i));break;case"svg":await c(`${t.path}**/*.svg`,e,a,async i=>v.optimize(i,s).data);break;default:break}}},c=async(t,e=2,a="",s=async o=>o,i=async o=>await p.promises.readFile(o,"utf-8"))=>{const o=await h(t),r={initial:0,files:0,total:0};for(const n of o)try{const f=(await p.promises.stat(n)).size;r.initial+=f;const l=await s(await i(n));if(!l)continue;if(f>Buffer.byteLength(l)){await p.promises.writeFile(n,l,"utf-8");const m=(await p.promises.stat(n)).size;r.files++,r.total+=f-m,e>1&&console.info("\x1B[32mCompressed "+n.replace(/^.*[\\\/]/,"")+" for "+await y(f-m)+" ("+((f-m)/f*100).toFixed(2)+"% reduction).\x1B[39m")}}catch{console.log("Error: Cannot compress file "+n+"!")}e>0&&console.info("\x1B[32mSuccessfully compressed a total of "+r.files+" "+a.toUpperCase()+" "+(r.files===1?"file":"files")+" for "+await y(r.total)+".\x1B[39m")};
